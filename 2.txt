<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Flappy Bird with Levels</title>
  <style>
    body {
      margin: 0;
      background: linear-gradient(to bottom, #70c5ce, #ffffff);
      overflow: hidden;
      font-family: Arial, sans-serif;
    }

    canvas {
      display: block;
      margin: 0 auto;
    }

    #scoreBoard, #menu {
      position: absolute;
      top: 20px;
      width: 100%;
      text-align: center;
      z-index: 2;
    }

    #scoreBoard {
      color: white;
      font-size: 24px;
      text-shadow: 1px 1px 2px #000;
      display: none;
    }

    #menu {
      top: 30%;
      text-align: center;
    }

    .btn {
      background: #ffc600;
      border: none;
      padding: 12px 25px;
      margin: 10px;
      font-size: 18px;
      border-radius: 8px;
      cursor: pointer;
    }

    select {
      padding: 8px;
      font-size: 16px;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <div id="scoreBoard">Score: 0 | High Score: 0</div>

  <div id="menu">
    <h1>Flappy Bird</h1>
    <label>Select Difficulty:</label><br>
    <select id="difficulty">
      <option value="easy">Easy</option>
      <option value="medium" selected>Medium</option>
      <option value="hard">Hard</option>
    </select><br><br>
    <button class="btn" onclick="startGame()">Start Game</button>
  </div>

  <canvas id="gameCanvas" width="400" height="600"></canvas>

  <!-- Audio -->
  <audio id="bgMusic" loop autoplay>
    <source src="https://cdn.pixabay.com/download/audio/2025/01/15/audio_5e7f041867.mp3" type="audio/mp3">
  </audio>
  <audio id="flapSound">
    <source src="https://cdn.pixabay.com/download/audio/2023/08/03/audio_3cba9b13f0.mp3" type="audio/mp3">
  </audio>

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");

    const birdImg = new Image();
    birdImg.src = "https://www.pngmart.com/files/12/Flappy-Bird-Transparent-Background.png";

    const flapSound = document.getElementById("flapSound");
    const bgMusic = document.getElementById("bgMusic");

    let bird, pipes, frame, score, highScore, gameOver;
    let pipeGap = 140;
    let pipeSpeed = 2;

    function setupGame() {
      bird = { x: 80, y: 200, width: 40, height: 30, velocity: 0, gravity: 0.6, jump: -10 };
      pipes = [];
      frame = 0;
      score = 0;
      highScore = localStorage.getItem("flappyHighScore") || 0;
      gameOver = false;
    }

    function startGame() {
      // Set difficulty
      const level = document.getElementById("difficulty").value;
      if (level === "easy") {
        pipeGap = 170; pipeSpeed = 2;
      } else if (level === "medium") {
        pipeGap = 140; pipeSpeed = 2.5;
      } else if (level === "hard") {
        pipeGap = 110; pipeSpeed = 3.2;
      }

      document.getElementById("menu").style.display = "none";
      document.getElementById("scoreBoard").style.display = "block";
      setupGame();
      loop();
    }

    function flap() {
      if (!gameOver) {
        bird.velocity = bird.jump;
        flapSound.currentTime = 0;
        flapSound.play();
      }
    }

    document.addEventListener("keydown", flap);
    document.addEventListener("touchstart", flap);

    function drawBird() {
      ctx.drawImage(birdImg, bird.x - bird.width / 2, bird.y - bird.height / 2, bird.width, bird.height);
    }

    function drawPipes() {
      ctx.fillStyle = "#0f0";
      pipes.forEach(pipe => {
        ctx.fillRect(pipe.x, 0, pipe.width, pipe.top);
        ctx.fillRect(pipe.x, pipe.top + pipe.gap, pipe.width, canvas.height - pipe.top - pipe.gap);
      });
    }

    function update() {
      if (gameOver) return;

      bird.velocity += bird.gravity;
      bird.y += bird.velocity;

      if (frame % 90 === 0) {
        let top = Math.random() * 200 + 50;
        pipes.push({ x: canvas.width, width: 50, top: top, gap: pipeGap, scored: false });
      }

      pipes.forEach(pipe => {
        pipe.x -= pipeSpeed;

        if (
          bird.x + bird.width / 2 > pipe.x &&
          bird.x - bird.width / 2 < pipe.x + pipe.width &&
          (bird.y - bird.height / 2 < pipe.top || bird.y + bird.height / 2 > pipe.top + pipe.gap)
        ) {
          gameOver = true;
        }

        if (!pipe.scored && pipe.x + pipe.width < bird.x) {
          pipe.scored = true;
          score++;
        }
      });

      if (bird.y + bird.height / 2 > canvas.height || bird.y < 0) {
        gameOver = true;
      }

      pipes = pipes.filter(pipe => pipe.x + pipe.width > 0);
      frame++;

      document.getElementById("scoreBoard").textContent =
        `Score: ${score} | High Score: ${Math.max(score, highScore)}`;
    }

    function draw() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawBird();
      drawPipes();
    }

    function loop() {
      update();
      draw();

      if (!gameOver) {
        requestAnimationFrame(loop);
      } else {
        if (score > highScore) {
          localStorage.setItem("flappyHighScore", score);
        }

        ctx.fillStyle = "#000";
        ctx.font = "36px Arial";
        ctx.fillText("Game Over", canvas.width / 2 - 100, canvas.height / 2);
        ctx.font = "18px Arial";
        ctx.fillText("Tap or Press Any Key to Restart", canvas.width / 2 - 130, canvas.height / 2 + 30);

        document.addEventListener("keydown", restart, { once: true });
        document.addEventListener("touchstart", restart, { once: true });
      }
    }

    function restart() {
      setupGame();
      loop();
    }

    window.onload = () => {
      bgMusic.volume = 0.4;
      bgMusic.play().catch(() => {});
    };
  </script>
</body>
</html>
